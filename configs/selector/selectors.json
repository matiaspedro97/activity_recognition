{
"RFE": {
     "_imports": "from sklearn.feature_selection import RFE; from sklearn.svm import LinearSVC; from sklearn.ensemble import RandomForestClassifier",
     "_class": "RFE",
     "_params": {
        "estimator": "LinearSVC(C=1, max_iter=10000)",
        "n_features_to_select": 10,
        "step": 1
     },
     "_grid": {
        "estimator": "[LinearSVC(C=1, max_iter=1000), RandomForestClassifier(n_estimators=50, criterion='gini', max_depth=4, min_samples_split=0.2)]",
        "n_features_to_select": [6, 8, 10, 12],
        "step": [1]
     }
},
"RFE_comp": {
   "_imports": "from sklearn.feature_selection import RFE; from sklearn.svm import LinearSVC; from sklearn.ensemble import RandomForestClassifier",
   "_class": "RFE",
   "_params": {
      "estimator": "LinearSVC(C=1, max_iter=10000)",
      "n_features_to_select": 10,
      "step": 1
   },
   "_grid": {
      "estimator": "[RandomForestClassifier(n_estimators=50, criterion='gini', max_depth=4, min_samples_split=0.2)]",
      "n_features_to_select": [30],
      "step": [1]
   }
},
"SFS": {
   "_imports": "from sklearn.feature_selection import SequentialFeatureSelector as SFS; from sklearn.svm import LinearSVC; from sklearn.ensemble import RandomForestClassifier",
   "_class": "SequentialFeatureSelector",
   "_params": {
      "estimator": "LinearSVC(C=1, max_iter=10000)",
      "n_features_to_select": 10,
      "tol": 0.05
   },
   "_grid": {
      "estimator": "[LinearSVC(C=1, max_iter=1000)]",
      "n_features_to_select": [10],
      "tol": [0.05]
   }
},
"SKB": {
   "_imports": "from sklearn.feature_selection import SelectKBest, chi2, f_classif; import numpy as np",
   "_class": "SelectKBest",
   "_params": {
   "score_func": "chi2",
   "k": 10
   },
   "_grid": {
      "score_func": "[f_classif]",
      "k": "[8, 16, 20]"
   }
},
 "identity": {
   "_imports": "",
   "_class": "IdentityScaler",
   "_params": {}
}
}
